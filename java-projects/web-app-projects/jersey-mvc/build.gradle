buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath junit5PluginJar
    }
}

apply plugin: 'war'

ext {
    dockerMysqlDir = 'docker/jersey-mvc/db/data'
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    webapp
}

dependencies {
    providedCompile servlet
    compile        (jerseyMvc) {
        exclude module: 'servlet-api'
    }
    compile         thymeleaf
    compile        (thymeleafJava8Time) {
        exclude module: 'slf4j-api'
        exclude module: 'thymeleaf'
    }
    compile         jerseyContainerServlet
    compile         genson
    compile         eclipseLink
    compile        ('org.glassfish.hk2:guice-bridge:2.5.0-b32') {
        exclude module: 'guice'
        exclude module: 'hk2-api'
    }
    compile         guice
    compile         guiceServlet
    compile         guicePersist

    compile         slf4j
    compile         logback

    compile        (rootProject.project(':java-projects:object-mapping-projects:supercsv-sample')) {
        exclude module: 'slf4j-api'
    }
    compile        (rootProject.project(':java-projects:utilities'))

    compile         'org.webjars.bower:filesaver:1.3.3'
    compile         'org.webjars.npm:whatwg-fetch:2.0.1'
    compile         'org.webjars.npm:bootstrap.native:1.1.0'
    compile         'org.webjars.npm:bootstrap-css-only:3.3.7'

    compileOnly     jetbrainsAnnotations
    compileOnly     lombok

    webapp          webappRunner

    testCompile     junit5
}

task 'webappRunner'(type: JavaExec, dependsOn: 'war', group: 'run web app') {
    classpath = configurations.webapp.asFileTree
    args(tasks.war.outputs.files.asPath)
    args('--temp-directory', 'build/webapp-runner')
    main = 'webapp.runner.launch.Main'
}

task webappRunnerWithClean(dependsOn: 'clean', group: 'run web app') {
    finalizedBy 'webappRunner'
}

task deleteMysqlDataDir(type: Delete, group: 'run web app') {
    delete file(dockerMysqlDir)
}

task makeMysqlDataDir(group: 'run web app') {
    doLast {
        mkdir dockerMysqlDir
    }
}
